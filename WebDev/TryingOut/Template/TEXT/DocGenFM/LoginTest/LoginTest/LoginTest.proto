syntax = "proto3";

package LoginTest;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service Login {
  	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_tag) = {
		description: "ABitOfEverythingService description -- which should not be used in place of the documentation comment!"
		external_docs: {
			url: "https://github.com/grpc-ecosystem/grpc-gateway";
			description: "Find out more about EchoService";
		}
  };

// Login
//
// The {{.Name}} service is availible over {{len .Methods}} methods. {{range .Methods}}The {{.MethodDescriptorProto.Name}} method accepts a {{$length := len .Bindings}}{{if eq $length 1}}{{$index := index .Bindings 0}}{{$index.HTTPMethod}} message and returns a {{.ResponseType.Name}} message {{else}}You sir, just entered the else club
{{end}}{{end}}
  rpc Login (LoginRequest) returns (LoginReply) {
    // Create a new bike
    option (google.api.http) = {
      post: "/v1/example/echo"
      body: "*"
    };
  }
}

// LoginRequest
//
// The message {{.Name}} contains {{len .Fields}}
message LoginRequest {
  string username = 1;
  string password = 2;
}

// LoginReply
message LoginReply {
  string message = 1;
  bool access = 2;
}

// {{import}}
message TestMessage {
  
}