// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LoginTest.proto

package LoginTest

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// message LoginRequest is the argument that you give to Login, this message contains a string username and a string password.
// These messages can be inputted to the server via a post method. This could be using Postman (for documentation/testing purposes) or via http.
type LoginRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d18a4d45edf1a1e, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// message LoginReply is the return value of rpc Login, this message contains a simple message.
type LoginReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Access               bool     `protobuf:"varint,2,opt,name=access,proto3" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReply) Reset()         { *m = LoginReply{} }
func (m *LoginReply) String() string { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()    {}
func (*LoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d18a4d45edf1a1e, []int{1}
}

func (m *LoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReply.Unmarshal(m, b)
}
func (m *LoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReply.Marshal(b, m, deterministic)
}
func (m *LoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReply.Merge(m, src)
}
func (m *LoginReply) XXX_Size() int {
	return xxx_messageInfo_LoginReply.Size(m)
}
func (m *LoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReply proto.InternalMessageInfo

func (m *LoginReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *LoginReply) GetAccess() bool {
	if m != nil {
		return m.Access
	}
	return false
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "LoginTest.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "LoginTest.LoginReply")
}

func init() { proto.RegisterFile("LoginTest.proto", fileDescriptor_6d18a4d45edf1a1e) }

var fileDescriptor_6d18a4d45edf1a1e = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xd1, 0x8a, 0xd4, 0x30,
	0x14, 0x86, 0xe9, 0x80, 0xeb, 0x6e, 0x10, 0x94, 0xc2, 0xea, 0x50, 0x05, 0x8f, 0x73, 0x25, 0x62,
	0x27, 0xa8, 0x77, 0x7b, 0x21, 0xac, 0xb0, 0x7b, 0x25, 0x88, 0xe3, 0xbe, 0x40, 0x9a, 0x9e, 0x49,
	0x02, 0x6d, 0x4e, 0xcc, 0x49, 0xa7, 0xf6, 0xd6, 0x47, 0xd0, 0x07, 0xf0, 0x41, 0xbc, 0xf0, 0x21,
	0x7c, 0x05, 0x1f, 0x44, 0xa6, 0xd3, 0xae, 0xc2, 0x5c, 0xe5, 0x7c, 0xf9, 0x7f, 0xfe, 0x84, 0xff,
	0x88, 0xfb, 0xef, 0xc9, 0x38, 0x7f, 0x83, 0x9c, 0xd6, 0x21, 0x52, 0xa2, 0xfc, 0xec, 0xf6, 0xa2,
	0x78, 0x62, 0x88, 0x4c, 0x83, 0x52, 0x05, 0x27, 0x95, 0xf7, 0x94, 0x54, 0x72, 0xe4, 0xf9, 0x60,
	0x2c, 0x5e, 0x8e, 0x87, 0x2e, 0x0d, 0xfa, 0x92, 0x7b, 0x65, 0x0c, 0x46, 0x49, 0x61, 0x74, 0x1c,
	0xbb, 0x57, 0xd7, 0xe2, 0xde, 0x18, 0xbc, 0xc1, 0xcf, 0x1d, 0x72, 0xca, 0x0b, 0x71, 0xda, 0x31,
	0x46, 0xaf, 0x5a, 0x5c, 0x66, 0x90, 0x3d, 0x3f, 0xdb, 0xdc, 0xf2, 0x5e, 0x0b, 0x8a, 0xb9, 0xa7,
	0x58, 0x2f, 0x17, 0x07, 0x6d, 0xe6, 0xd5, 0x5b, 0x21, 0xa6, 0x9c, 0xd0, 0x0c, 0xf9, 0x52, 0xdc,
	0x6d, 0x91, 0x59, 0x99, 0x39, 0x64, 0xc6, 0xfc, 0xa1, 0x38, 0x51, 0x5a, 0x23, 0xf3, 0x98, 0x70,
	0xba, 0x99, 0xe8, 0xf5, 0x8f, 0x85, 0xb8, 0x33, 0x06, 0xe4, 0x37, 0xf3, 0xf0, 0x68, 0xfd, 0xaf,
	0x83, 0xff, 0xff, 0x58, 0x9c, 0x1f, 0x0b, 0xa1, 0x19, 0x56, 0x8f, 0xbf, 0xfe, 0xfe, 0xf3, 0x7d,
	0x71, 0xbe, 0x7a, 0x20, 0x77, 0xaf, 0x24, 0x7e, 0x51, 0x6d, 0x68, 0x50, 0xa2, 0xb6, 0x74, 0x91,
	0xbd, 0x28, 0x7e, 0x65, 0xdf, 0x2e, 0x7f, 0x66, 0xf9, 0xf6, 0xf2, 0x9d, 0x4b, 0x1f, 0xb6, 0x57,
	0x3b, 0x8c, 0x43, 0xb2, 0xce, 0x9b, 0x4f, 0x18, 0x77, 0x4e, 0x23, 0xd4, 0xc8, 0x3a, 0xba, 0xb1,
	0x26, 0x28, 0x4b, 0xe8, 0xad, 0xd3, 0x16, 0xd8, 0x52, 0xd7, 0xd4, 0xe0, 0x29, 0x41, 0x85, 0xd0,
	0x31, 0xd6, 0xe0, 0x3c, 0x84, 0x46, 0x69, 0x04, 0xda, 0x42, 0xb2, 0x08, 0x35, 0xe9, 0xae, 0x45,
	0x7f, 0x28, 0x15, 0x34, 0xb5, 0x7b, 0x78, 0x56, 0x7c, 0x14, 0x4f, 0xaf, 0x9d, 0xaf, 0x81, 0xba,
	0x04, 0x2d, 0x45, 0x04, 0x55, 0xed, 0xc7, 0x2b, 0x6d, 0x69, 0x7a, 0x31, 0x5f, 0xdb, 0x94, 0x02,
	0x5f, 0x48, 0x69, 0x5c, 0xb2, 0x5d, 0xb5, 0xd6, 0xd4, 0x4a, 0x13, 0x83, 0x2e, 0x51, 0x13, 0x0f,
	0x9c, 0x70, 0x42, 0xa3, 0x12, 0xf6, 0x6a, 0xa8, 0x4e, 0xc6, 0x85, 0xbd, 0xf9, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x10, 0x3f, 0xbd, 0xe2, 0x1a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoginClient is the client API for Login service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoginClient interface {
	// Login
	//
	// rpc Login is the Remote Procedure Call that takes a LoginRequest and returns a LoginReply.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
}

type loginClient struct {
	cc *grpc.ClientConn
}

func NewLoginClient(cc *grpc.ClientConn) LoginClient {
	return &loginClient{cc}
}

func (c *loginClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/LoginTest.Login/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoginServer is the server API for Login service.
type LoginServer interface {
	// Login
	//
	// rpc Login is the Remote Procedure Call that takes a LoginRequest and returns a LoginReply.
	Login(context.Context, *LoginRequest) (*LoginReply, error)
}

// UnimplementedLoginServer can be embedded to have forward compatible implementations.
type UnimplementedLoginServer struct {
}

func (*UnimplementedLoginServer) Login(ctx context.Context, req *LoginRequest) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterLoginServer(s *grpc.Server, srv LoginServer) {
	s.RegisterService(&_Login_serviceDesc, srv)
}

func _Login_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LoginTest.Login/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Login_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LoginTest.Login",
	HandlerType: (*LoginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Login_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "LoginTest.proto",
}
